[project]
name = "polyany"
version = "0.1.0"
description = "A Python package for algebraic manipulation of multivariate polynomials"
readme = "README.md"
authors = [
    { name = "Cristiano Agulhari", email = "agulhari@utfpr.edu.br" },
    { name = "Esdras Battosti", email = "esdras.2019@alunos.utfpr.edu.br" },
]
license = "BSD-3-Clause"
license-files = ["LICENSE"]
keywords = ["polynomials", "multivariate", "algebra"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]
requires-python = ">=3.11"
dependencies = [
    "numpy>=2.3.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pyright>=1.1.402",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.1",
]
docs = [
    "mkdocs-material>=9.6.15",
]

[tool.ruff]
line-length = 88
target-version = "py313"
fix = true
show-fixes = true
indent-width = 4
exclude = ["venv", ".venv", "env", ".env", "node_modules", "__pycache__"]

[tool.ruff.lint]
select = [
    "ASYNC",
    "A",
    "ANN",
    "B",
    "BLE",
    "C4",
    "C90",
    "COM",
    "E",
    "EM",
    "ERA",
    "EXE",
    "F",
    "FBT",
    "FIX",
    "I",
    "ICN",
    "ISC",
    "Q",
    "RET",
    "RSE",
    "S",
    "SIM",
    "SLF",
    "T10",
    "T20",
    "TC",
    "TD",
    "TRY",
    "UP",
    "W",
    "YTT",
    "RUF",
    "N",
    "NPY",
]
ignore = ["T201", "COM812", "TD003", "FIX002"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["ANN201", "S101"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint.isort]
known-first-party = ["polyany"]

[tool.pyright]
typeCheckingMode = "basic"
pythonVersion = "3.13"
include = ["src", 'tests']
exclude = [
    "**/venv",
    "**/.venv",
    "**/env",
    "**/.env",
    "**/node_modules",
    "**/__pycache__",
]
venv = ".venv"
venvPath = "."
executionEnvironments = [{ root = "src" }]

[tool.pytest.ini_options]
addopts = "-s --color=yes --tb=short"
pythonpath = ["src"]
testpaths = ["tests"]
